{"version":3,"sources":["node_modules/@ionic-super-tabs/core/dist/esm/super-tab_3.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, h, g as getElement, c as createEvent, H as Host, d as getContext } from './index-a34c410e.js';\nimport { D as DEFAULT_CONFIG, d as debugLog, s as scrollEl, a as getTs, c as checkGesture, p as pointerCoord } from './utils-640d2cf5.js';\n\nconst superTabComponentCss = \":host{height:var(--super-tab-height, 100%);position:relative;display:block;overflow-x:hidden;overflow-y:auto;contain:size style;z-index:1;-ms-flex-negative:0;flex-shrink:0;-ms-flex-positive:0;flex-grow:0;width:var(--super-tab-width, 100vw);-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased}:host[noScroll]{overflow-y:hidden}ion-nav,ion-content{height:100%;max-height:100%;position:absolute}ion-nav>.ion-page,ion-content>.ion-page{position:absolute}\";\n\nclass SuperTabComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentDidLoad() {\n        this.checkIonContent();\n    }\n    componentDidUpdate() {\n        // check for ion-content after update, in case it was dynamically loaded\n        this.checkIonContent();\n    }\n    /**\n     * Check if we have an ion-content as a child and update the `noScroll` property\n     * if it's not set yet.\n     */\n    checkIonContent() {\n        if (typeof this.noScroll !== 'boolean') {\n            const ionContentEl = this.el.querySelector('ion-content');\n            if (ionContentEl && ionContentEl.parentElement === this.el) {\n                this.noScroll = true;\n            }\n        }\n    }\n    /**\n     * Returns the root scrollable element\n     */\n    async getRootScrollableEl() {\n        if (!this.noScroll && this.el.scrollHeight > this.el.clientHeight) {\n            return this.el;\n        }\n        const ionContent = this.el.querySelector('ion-content');\n        if (ionContent) {\n            return ionContent.getScrollElement();\n        }\n        if (this.noScroll) {\n            return null;\n        }\n        return this.el;\n    }\n    render() {\n        return h(\"slot\", null);\n    }\n    get el() { return getElement(this); }\n}\nSuperTabComponent.style = superTabComponentCss;\n\nconst superTabsComponentCss = \":host{height:100%;max-height:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden;z-index:1;position:relative;contain:layout size style;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased;-ms-touch-action:none;touch-action:none;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}\";\n\nconst maxInitRetries = 1e3;\n/**\n * Root component that controls the other super-tab components.\n *\n * This component propagates configuration over to children and keeps track of the tabs state.\n */\nclass SuperTabsComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Initial active tab index.\n         * Defaults to `0`.\n         *\n         * @type {number}\n         */\n        this.activeTabIndex = 0;\n        this._config = DEFAULT_CONFIG;\n        this.initAttempts = 0;\n        this.initPromise = new Promise((resolve) => {\n            this.initPromiseResolve = resolve;\n        });\n        this.tabChange = createEvent(this, \"tabChange\", 7);\n    }\n    /**\n     * Set/update the configuration\n     * @param {SuperTabsConfig} config Configuration object\n     */\n    async setConfig(config) {\n        this._config = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);\n    }\n    propagateConfig() {\n        this.container && (this.container.config = this._config);\n        this.toolbar && (this.toolbar.config = this._config);\n    }\n    /**\n     * Set the selected tab.\n     * This will move the container and the toolbar to the selected tab.\n     * @param index {number} the index of the tab you want to select\n     * @param [animate=true] {boolean} whether you want to animate the transition\n     * @param [emit=true] {boolean} whether you want to emit tab change event\n     */\n    async selectTab(index, animate = true, emit = true) {\n        this.debug('selectTab', index, animate);\n        await this.initPromise;\n        const lastIndex = this.activeTabIndex;\n        if (this.container) {\n            await this.container.setActiveTabIndex(index, true, animate);\n        }\n        if (this.toolbar) {\n            await this.toolbar.setActiveTab(index, true, animate);\n        }\n        if (emit) {\n            this.emitTabChangeEvent(index, lastIndex);\n        }\n        this.activeTabIndex = lastIndex;\n    }\n    async onConfigChange(config) {\n        await this.setConfig(config);\n    }\n    onWindowResize() {\n        this.debug('onWindowResize');\n        this.toolbar && this.toolbar.setSelectedTab(this.activeTabIndex);\n        this.container.reindexTabs();\n    }\n    async componentWillLoad() {\n        if (this.config) {\n            await this.setConfig(this.config);\n        }\n    }\n    componentDidLoad() {\n        this.debug('componentDidLoad');\n        // index children\n        this.indexChildren();\n        // set the selected tab so the toolbar & container are aligned and in sync\n        if (this.container) {\n            this.container.setActiveTabIndex(this.activeTabIndex, true, false);\n        }\n        if (this.toolbar) {\n            this.toolbar.setActiveTab(this.activeTabIndex, true, false);\n        }\n        // listen to `slotchange` event to detect any changes in children\n        this.el.shadowRoot.addEventListener('slotchange', this.onSlotchange.bind(this));\n        requestAnimationFrame(() => {\n            this.initComponent();\n        });\n    }\n    initComponent() {\n        if (!this.container) {\n            if (++this.initAttempts <= maxInitRetries) {\n                requestAnimationFrame(() => {\n                    this.initComponent();\n                });\n                return;\n            }\n            else {\n                this.debug(`container still doesn't exists after ${maxInitRetries} frames`);\n            }\n        }\n        if (this.container) {\n            this.container.setActiveTabIndex(this.activeTabIndex, true, false);\n        }\n        if (this.toolbar) {\n            this.toolbar.setActiveTab(this.activeTabIndex, true);\n        }\n        this.propagateConfig();\n        this.setupEventListeners();\n        this.initPromiseResolve();\n    }\n    /**\n     * Setup event listeners to synchronize child components\n     */\n    async setupEventListeners() {\n        if (this.container) {\n            await this.container.componentOnReady();\n            this.el.addEventListener('selectedTabIndexChange', this.onContainerSelectedTabChange.bind(this));\n            this.el.addEventListener('activeTabIndexChange', this.onContainerActiveTabChange.bind(this));\n        }\n        else {\n            this.debug('setupEventListeners: container does not exist');\n        }\n        if (this.toolbar) {\n            await this.toolbar.componentOnReady();\n            this.el.addEventListener('buttonClick', this.onToolbarButtonClick.bind(this));\n        }\n        else {\n            this.debug('setupEventListeners: toolbar does not exist');\n        }\n    }\n    async onContainerSelectedTabChange(ev) {\n        this.debug('onContainerSelectedTabChange called with: ', ev);\n        if (this.toolbar) {\n            await this.toolbar.setSelectedTab(ev.detail);\n        }\n    }\n    emitTabChangeEvent(newIndex, oldIndex) {\n        if (typeof newIndex !== 'number' || newIndex < 0) {\n            return;\n        }\n        if (typeof oldIndex !== 'number' || oldIndex < 0) {\n            oldIndex = this.activeTabIndex;\n        }\n        this.tabChange.emit({\n            changed: newIndex !== oldIndex,\n            index: newIndex,\n        });\n    }\n    onContainerActiveTabChange(ev) {\n        this.debug('onContainerActiveTabChange', ev);\n        const index = ev.detail;\n        this.emitTabChangeEvent(index);\n        this.activeTabIndex = index;\n        this.toolbar && this.toolbar.setActiveTab(index, true, true);\n    }\n    onToolbarButtonClick(ev) {\n        this.debug('onToolbarButtonClick', ev);\n        const { index } = ev.detail;\n        this.container && this.container.setActiveTabIndex(index, true, true);\n        this.emitTabChangeEvent(index);\n        this.activeTabIndex = index;\n    }\n    indexChildren() {\n        this.debug('indexChildren');\n        const container = this.el.querySelector('super-tabs-container');\n        const toolbar = this.el.querySelector('super-tabs-toolbar');\n        if (container && this.container !== container) {\n            this.container = container;\n        }\n        if (toolbar && this.toolbar !== toolbar) {\n            this.toolbar = toolbar;\n        }\n        this.propagateConfig();\n    }\n    async onSlotchange() {\n        // re-index the child components\n        this.indexChildren();\n        // reselect the current tab to ensure that we're on the correct tab\n        this.selectTab(this.activeTabIndex, true, false);\n    }\n    /**\n     * Internal method to output values in debug mode.\n     */\n    debug(...vals) {\n        debugLog(this._config, 'tabs', vals);\n    }\n    render() {\n        // Render 3 slots\n        // Top & bottom slots allow the toolbar position to be configurable via slots.\n        // The nameless slot is used to hold the `super-tabs-container`.\n        return (h(Host, null, h(\"slot\", { name: \"top\" }), h(\"slot\", null), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"config\": [\"onConfigChange\"]\n    }; }\n}\nSuperTabsComponent.style = superTabsComponentCss;\n\nconst superTabsContainerComponentCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;min-width:100%;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;width:var(--super-tab-width, 100vw);height:var(--super-tab-height, 100%);overflow:hidden;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-ms-touch-action:pan-y;touch-action:pan-y;-moz-user-select:none;-ms-user-select:none;user-select:none;will-change:scroll-position;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased}\";\n\nclass SuperTabsContainerComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Enable/disable swiping\n         */\n        this.swipeEnabled = true;\n        /**\n         * Set to true to automatically scroll to the top of the tab when the button is clicked while the tab is\n         * already selected.\n         */\n        this.autoScrollTop = false;\n        this.tabs = [];\n        this.isDragging = false;\n        this.leftThreshold = 0;\n        this.rightThreshold = 0;\n        this.scrollWidth = 0;\n        this.width = 0;\n        this.activeTabIndexChange = createEvent(this, \"activeTabIndexChange\", 7);\n        this.selectedTabIndexChange = createEvent(this, \"selectedTabIndexChange\", 7);\n        this.queue = getContext(this, \"queue\");\n    }\n    async componentDidLoad() {\n        this.debug('componentDidLoad');\n        this.updateWidth();\n        await this.indexTabs();\n        this.slot = this.el.shadowRoot.querySelector('slot');\n        this.slot.addEventListener('slotchange', this.onSlotChange.bind(this));\n    }\n    async onSlotChange() {\n        this.debug('onSlotChange', this.tabs.length);\n        this.updateWidth();\n        this.indexTabs();\n    }\n    async componentDidRender() {\n        this.updateWidth();\n    }\n    /**\n     * @internal\n     */\n    async reindexTabs() {\n        this.updateWidth();\n        await this.indexTabs();\n    }\n    /**\n     * @internal\n     *\n     * Moves the container to align with the specified tab index\n     * @param index {number} Index of the tab\n     * @param animate {boolean} Whether to animate the transition\n     */\n    moveContainerByIndex(index, animate) {\n        const scrollX = this.indexToPosition(index);\n        if (scrollX === 0 && index > 0) {\n            return Promise.resolve();\n        }\n        return this.moveContainer(scrollX, animate);\n    }\n    /**\n     * @internal\n     *\n     * Sets the scrollLeft property of the container\n     * @param scrollX {number}\n     * @param animate {boolean}\n     */\n    moveContainer(scrollX, animate) {\n        if (animate) {\n            scrollEl(this.el, scrollX, 0, this.config.nativeSmoothScroll, this.config.transitionDuration);\n        }\n        else {\n            this.el.scroll(scrollX, 0);\n        }\n        return Promise.resolve();\n    }\n    /** @internal */\n    async setActiveTabIndex(index, moveContainer = true, animate = true) {\n        this.debug('setActiveTabIndex', index);\n        if (this._activeTabIndex === index) {\n            if (!this.autoScrollTop) {\n                return;\n            }\n            this.scrollToTop();\n        }\n        if (moveContainer) {\n            this.moveContainerByIndex(index, animate);\n        }\n        this.updateActiveTabIndex(index, false);\n    }\n    /**\n     * Scroll the active tab to the top.\n     */\n    async scrollToTop() {\n        if (this._activeTabIndex === undefined || this.tabs === undefined) {\n            this.debug('scrollToTop', 'activeTabIndex or tabs was undefined', this._activeTabIndex, this.tabs);\n            return;\n        }\n        const current = this.tabs[this._activeTabIndex];\n        if (!current) {\n            this.debug('Current active tab was undefined in scrollToTop');\n            return;\n        }\n        const el = await current.getRootScrollableEl();\n        if (el) {\n            scrollEl(el, 0, 0, this.config.nativeSmoothScroll, this.config.transitionDuration);\n        }\n        else {\n            this.debug('scrollToTop', 'couldnt find a scrollable element');\n        }\n    }\n    updateActiveTabIndex(index, emit = true) {\n        this.debug('updateActiveTabIndex', index, emit, this._activeTabIndex);\n        this._activeTabIndex = index;\n        emit && this.activeTabIndexChange.emit(this._activeTabIndex);\n    }\n    updateSelectedTabIndex(index) {\n        if (index === this._selectedTabIndex) {\n            return;\n        }\n        this._selectedTabIndex = index;\n        this.selectedTabIndexChange.emit(this._selectedTabIndex);\n    }\n    async onTouchStart(ev) {\n        if (!this.swipeEnabled) {\n            return;\n        }\n        if (this.config.avoidElements) {\n            let avoid = false;\n            let element = ev.target;\n            if (element) {\n                do {\n                    if (typeof element.getAttribute === 'function' && element.getAttribute('avoid-super-tabs')) {\n                        return;\n                    }\n                    element = element.parentElement;\n                } while (element && !avoid);\n            }\n        }\n        const coords = pointerCoord(ev);\n        this.updateWidth();\n        const vw = this.width;\n        if (coords.x < this.leftThreshold || coords.x > vw - this.rightThreshold) {\n            // ignore this gesture, it started in the side menu touch zone\n            return;\n        }\n        if (this.config.shortSwipeDuration > 0) {\n            this.initialTimestamp = getTs();\n        }\n        this.initialCoords = coords;\n        this.lastPosX = coords.x;\n    }\n    async onClick(ev) {\n        if (this.isDragging) {\n            ev.stopImmediatePropagation();\n            ev.preventDefault();\n        }\n    }\n    async onTouchMove(ev) {\n        if (!this.swipeEnabled || !this.initialCoords || typeof this.lastPosX !== 'number') {\n            return;\n        }\n        const coords = pointerCoord(ev);\n        if (!this.isDragging) {\n            if (!checkGesture(coords, this.initialCoords, this.config)) {\n                if (Math.abs(coords.y - this.initialCoords.y) > 100) {\n                    this.initialCoords = void 0;\n                    this.lastPosX = void 0;\n                }\n                return;\n            }\n            this.isDragging = true;\n        }\n        // stop anything else from capturing these events, to make sure the content doesn't slide\n        if (!this.config.allowElementScroll) {\n            ev.stopImmediatePropagation();\n        }\n        // get delta X\n        const deltaX = this.lastPosX - coords.x;\n        if (deltaX === 0) {\n            return;\n        }\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.el.scrollLeft + deltaX));\n        if (Math.floor(scrollX) === Math.floor(this.el.scrollLeft)) {\n            return;\n        }\n        const index = Math.round(this.positionToIndex(scrollX) * 100) / 100;\n        this.updateSelectedTabIndex(index);\n        // update last X value\n        this.lastPosX = coords.x;\n        this.el.scroll(scrollX, 0);\n    }\n    async onTouchEnd(ev) {\n        if (!this.swipeEnabled || !this.isDragging) {\n            return;\n        }\n        const coords = pointerCoord(ev);\n        const deltaTime = getTs() - this.initialTimestamp;\n        const shortSwipe = this.config.shortSwipeDuration > 0 && deltaTime <= this.config.shortSwipeDuration;\n        const shortSwipeDelta = coords.x - this.initialCoords.x;\n        let selectedTabIndex = this.calcSelectedTab();\n        const expectedTabIndex = Math.round(selectedTabIndex);\n        if (shortSwipe && expectedTabIndex === this._activeTabIndex) {\n            selectedTabIndex += shortSwipeDelta > 0 ? -1 : 1;\n        }\n        selectedTabIndex = this.normalizeSelectedTab(selectedTabIndex);\n        this.updateActiveTabIndex(selectedTabIndex);\n        this.moveContainerByIndex(selectedTabIndex, true);\n        this.isDragging = false;\n        this.initialCoords = void 0;\n        this.lastPosX = void 0;\n    }\n    updateWidth() {\n        const boundingRect = this.el.getBoundingClientRect();\n        this.width = Math.round(boundingRect.width * 10000) / 10000;\n    }\n    async indexTabs() {\n        if (this.width === 0) {\n            requestAnimationFrame(() => {\n                this.updateWidth();\n                this.indexTabs();\n            });\n            return;\n        }\n        const tabs = Array.from(this.el.querySelectorAll('super-tab'));\n        this.scrollWidth = this.width * tabs.length;\n        this.debug('indexTab', this.scrollWidth, this.width);\n        await Promise.all(tabs.map(t => t.componentOnReady()));\n        this.tabs = tabs;\n        if (this.ready && typeof this._activeTabIndex === 'number') {\n            this.moveContainerByIndex(this._activeTabIndex, true);\n        }\n        if (this.config) {\n            switch (this.config.sideMenu) {\n                case 'both':\n                    this.rightThreshold = this.leftThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n                case 'left':\n                    this.leftThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n                case 'right':\n                    this.rightThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n            }\n        }\n        if (this._activeTabIndex !== undefined) {\n            this.moveContainerByIndex(this._activeTabIndex, false)\n                .then(() => {\n                this.ready = true;\n            });\n        }\n    }\n    calcSelectedTab() {\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.el.scrollLeft));\n        return this.positionToIndex(scrollX);\n    }\n    positionToIndex(scrollX) {\n        const tabWidth = this.width;\n        return scrollX / tabWidth;\n    }\n    indexToPosition(tabIndex) {\n        return Math.round(tabIndex * this.width * 10000) / 10000;\n    }\n    normalizeSelectedTab(index) {\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.indexToPosition(index)));\n        return Math.round(scrollX / this.width);\n    }\n    /**\n     * Internal method to output values in debug mode.\n     */\n    debug(...vals) {\n        debugLog(this.config, 'container', vals);\n    }\n    render() {\n        return h(\"slot\", null);\n    }\n    get el() { return getElement(this); }\n}\nSuperTabsContainerComponent.style = superTabsContainerComponentCss;\n\nexport { SuperTabComponent as super_tab, SuperTabsComponent as super_tabs, SuperTabsContainerComponent as super_tabs_container };\n"],"sourceRoot":"webpack:///","file":"2-es5.js"}