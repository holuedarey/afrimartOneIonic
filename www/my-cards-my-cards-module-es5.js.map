{"version":3,"sources":["src/app/my-cards/my-cards.page.html","src/app/core/http-services/user.service.ts","src/app/my-cards/my-cards.module.ts","src/app/my-cards/my-cards.page.scss","src/app/my-cards/my-cards.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-header\\n  [title]=\\\"title\\\"\\n  [longSearch]=\\\"longSearch\\\"\\n  [showBackButton]=\\\"showBackButton\\\"\\n  [isLoading]=\\\"loading\\\"\\n  [showSearch]=\\\"showSearch\\\"\\n>\\n</app-header>\\n\\n<ion-content>\\n  <ion-row>\\n    <ion-col size=\\\"8\\\" class=\\\"t_left note_title_bold14Sec\\\">\\n      {{cards_count}} CARD(S)\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"t_right\\\">\\n      <a (click)=\\\"presentCardModal()\\\" class=\\\"note_title_bold12Sec\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n        ADD NEW CARD</a\\n      >\\n    </ion-col>\\n  </ion-row>\\n\\n  <div *ngIf=\\\"lt_cards\\\">\\n    <ion-list *ngFor=\\\"let x of lt_cards;let i=index\\\" lines=\\\"none\\\">\\n      <ion-item-sliding id=\\\"item100\\\">\\n        <ion-item [ngClass]=\\\"(i % 2 == 0) ? 'odd' : 'even'\\\">\\n          <ion-icon\\n            ion-text\\n            color=\\\"dark\\\"\\n            name=\\\"card-outline\\\"\\n            item-start\\n          ></ion-icon>\\n          <ion-label>\\n            <h3><b>{{x.bank}}</b></h3>\\n            <h5>{{x.bin}} ********** {{x.last4}} ({{x.brand}})</h5>\\n            <h5><b>Exp:</b> {{x.expMonth}}/{{x.expYear}}</h5>\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" *ngIf=\\\"x.isDefault\\\">\\n            <ion-icon color=\\\"primary\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n            <div style=\\\"font-size: 12px; color: #bc4dad;\\\">Default</div>\\n          </ion-note>\\n        </ion-item>\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option\\n            color=\\\"success\\\"\\n            (click)=\\\"makeDefault(x)\\\"\\n            *ngIf=\\\"!x.isDefault\\\"\\n          >\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon> Make Default\\n          </ion-item-option>\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteConfirm(x)\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon> Delete\\n          </ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-list>\\n    <br>\\n    <ion-note class=\\\"note_title_bold14Black\\\">&nbsp;&nbsp;Please swipe a card to the right for the menu!!</ion-note>\\n  </div>\\n  \\n</ion-content>\\n\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport {\n  User,\n  RegisterModel,\n  ChangePasswordModel,\n  AccountSetupResponseModel,\n  AccountSettingResponseModel,\n  SendEmailVerificationCodeModel,\n  EmailVerificationModel,\n  SendResetPasswordLinkModel,\n  ResetPasswordModel,\n  ProfileModel,\n  AddressModel,\n  StateLgaModel,\n} from \"src/app/shared/models/user.model\";\nimport { map } from \"rxjs/operators\";\nimport {\n  storageNamesEnum,\n  getStorageName,\n} from \"src/app/shared/models/storage.model\";\nimport { AuthenticationService } from \"../authentication/authentication.service\";\nimport { BecomeSellerModel } from \"src/app/shared/models/seller.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  apiUrl: string = `${environment.apiUrl}accounts/`;\n\n  headerSetter(token) {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    });\n  }\n  headerSt() {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n    });\n  }\n\n  constructor(\n    private http: HttpClient,\n    private nativeStorage: NativeStorage,\n    private authService: AuthenticationService\n  ) {}\n\n  getSlides() {\n    return this.http.get(`${this.apiUrl}resources/slide`);\n  }\n\n  register(body: RegisterModel) {\n    return this.http.post<AccountSetupResponseModel>(\n      `${this.apiUrl}register`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  changePassword(token,body: ChangePasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}change-password`,\n      body, {\n      headers: this.headerSetter(token),\n    }\n    );\n  }\n\n  sendEmailVerificationCode(body: SendEmailVerificationCodeModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}send-email-verification-token`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  verifyEmailCode(body: EmailVerificationModel) {\n    return this.http.post<AccountSetupResponseModel>(\n      `${this.apiUrl}email-verification`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  requestForPasswordResetLink(body: SendResetPasswordLinkModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}send-reset-password`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  resetPassword(body: ResetPasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}reset-password`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  updateProfile(token,body: ProfileModel) {\n    return this.http\n      .put<AccountSettingResponseModel>(`${this.apiUrl}profile`, body, {\n        headers: this.headerSetter(token),\n      })\n      .pipe(\n        map((res) => {\n          if (!res.error) {\n            const user = this.authService.currentUserValue();\n            user.user = res.data;\n            localStorage.setItem(\n              getStorageName(storageNamesEnum.currentUser),\n              JSON.stringify(user)\n            );\n            this.authService.currentUserSubject.next(user);\n          }\n          return res;\n        })\n      );\n  }\n\n  getProfile(token:any) {\n    return this.http.get<AccountSettingResponseModel>(`${this.apiUrl}profile`,\n      {\n        headers: this.headerSetter(token),\n      });\n  }\n\n  getUser = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getUsername = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt.user.fName + \" \" + dt.user.sName;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getAddresses(token: any) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getAddress(id: string) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`\n    );\n  }\n\n  deleteAddress(token:string, id: string) {\n    return this.http.delete<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  updateAddress(token:string,id: string, body: AddressModel) {\n    return this.http.put<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  addAddress(token:string, body: AddressModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  becomeSeller(token:string,body: BecomeSellerModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${environment.apiUrl}/merchants/become-merchant`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getStatesLgas() {\n    return this.http.get<StateLgaModel[]>(`../../../assets/states.json`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedComponentsModule } from '../sharedComponents/shared-components.module';\n\nimport { MyCardsPage } from './my-cards.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: MyCardsPage\n      }\n    ]),\n    SharedComponentsModule\n  ],\n  declarations: [MyCardsPage]\n})\nexport class MyCardsPageModule {}\n","export default \"ion-content {\\n  --background:#ffffff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0lvbmljL2FmcmltYXJ0b25lL3NyYy9hcHAvbXktY2FyZHMvbXktY2FyZHMucGFnZS5zY3NzIiwic3JjL2FwcC9teS1jYXJkcy9teS1jYXJkcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbXktY2FyZHMvbXktY2FyZHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XG4gICAgLS1iYWNrZ3JvdW5kOiNmZmZmZmY7XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6I2ZmZmZmZjtcbn0iXX0= */\"","import { ModalController, ToastController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { CardModalPage } from 'src/app/card-modal/card-modal.page';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserService } from 'src/app/core/http-services/user.service';\n\n@Component({\n  selector: 'app-my-cards',\n  templateUrl: './my-cards.page.html',\n  styleUrls: ['./my-cards.page.scss'],\n})\nexport class MyCardsPage implements OnInit {\n  ///Inputs\n  title: string = 'My Cards';\n  longSearch: boolean = false;\n  showBackButton: boolean = true;\n  loading: boolean = false;\n  showSearch: boolean = true;\n  ////////////////////\n  accounts_cards: any;\n  // lt_account_cards = new Array();\n  cards_count: number = 0;\n  currentUser: any;\n  lt_cards: any;\n\n  constructor(\n    private nativeStorage: NativeStorage,\n    private modalCtrl: ModalController,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.loading=true;\n    this.nativeStorage.getItem('currentUser').then((x) => {\n      this.currentUser = x;\n      this.userService.getProfile(this.currentUser.token).subscribe(\n        (data) => {\n          if (!data.error) {\n            // console.log('this.profile:' + JSON.stringify(data.data));\n            if (data.data.cards) {\n              this.lt_cards = data.data.cards;\n              this.nativeStorage.setItem('MyCards',data.data.cards);      \n              this.nativeStorage.getItem(\"MyCards\").then(data=>{\n                if(data){console.log('Native MyCards:' + JSON.stringify(data)); }\n              },\n              err=>{console.error(err)});\n\n              this.cards_count = this.lt_cards.length;\n              this.loading=false;\n            }\n          } else {\n            this.loading=false;\n            this.presentToast(\n              'OOPS',\n              'There was an error getting your profile, Please try again',\n              4000,\n              'warning'\n            );\n          }\n        },\n        (err) => {\n          this.loading=false;\n          this.presentToast(err.message, err.errors, 4000, 'error');\n        }\n      );\n    });\n  }\n  async presentToast(\n    header: string,\n    msg: string,\n    duration: number,\n    color: string\n  ) {\n    const toast = await this.toastController.create({\n      header: header,\n      position: 'bottom',\n      message: msg,\n      duration: duration,\n      // cssClass: 'custom-toast-class',\n      color: color,\n    });\n    toast.present();\n  }\n  async presentCardModal() {\n    const modal = await this.modalCtrl.create({\n      component: CardModalPage,\n      componentProps: {},\n    });\n    return await modal.present().then(() => {\n      modal.onWillDismiss().then((d) => {\n        if (d.data.card) {\n          console.log('New Card Data: ' + JSON.stringify(d.data.card));\n          this.lt_cards = d.data.card;\n          this.nativeStorage.setItem('MyCards',d.data.cards);\n          this.cards_count = this.lt_cards.length;\n        }\n      });\n    });\n  }\n  makeDefault(card){\n    console.log('makeDefault:' + JSON.stringify(card));\n  }\n  deleteConfirm(card){\n    console.log('deleteConfirm:' + JSON.stringify(card));\n  }\n}\n"],"sourceRoot":"webpack:///","file":"my-cards-my-cards-module-es5.js"}