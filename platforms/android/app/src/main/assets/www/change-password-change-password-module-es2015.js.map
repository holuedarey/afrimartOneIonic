{"version":3,"sources":["./src/app/change-password/change-password.page.html","./src/app/change-password/change-password.module.ts","./src/app/change-password/change-password.page.scss","./src/app/change-password/change-password.page.ts","./src/app/core/http-services/user.service.ts"],"names":[],"mappings":"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","file":"change-password-change-password-module-es2015.js","sourcesContent":["export default \"<app-header [title]=\\\"title\\\" [longSearch]=\\\"longSearch\\\" [showBackButton]=\\\"showBackButton\\\" [isLoading]=\\\"loading\\\"\\n  [showSearch]=\\\"showSearch\\\">\\n</app-header>\\n<ion-content>\\n  <form [formGroup]=\\\"changePasswordForm\\\">\\n    <ion-grid style=\\\"padding-top: 10%;\\\">\\n      <ion-row>\\n        <ion-col  size=\\\"12\\\">      \\n        <ion-row>\\n          <ion-col col-12  class=\\\"colForm m-t-b-14\\\"> \\n            <ion-item lines=\\\"none\\\" >\\n                <ion-input  class=\\\"margin-top-input\\\" formControlName=\\\"oldPassword\\\"  placeholder=\\\"Old Password\\\" [type]=\\\"showCurrentPassword? 'text':'password'\\\" clear-input=\\\"true\\\"></ion-input>\\n                <ion-icon  [name]=\\\"passwordToggleIconCur\\\" color=\\\"medium\\\" class=\\\"iconEyeSize margin-top-icon\\\" slot=\\\"end\\\" (click)=\\\"toggleCurrentPassword()\\\"></ion-icon> \\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm m-t-b-14\\\">\\n            <ion-item lines=\\\"none\\\" >\\n              <ion-input class=\\\"margin-top-input\\\" formControlName=\\\"newPassword\\\"  placeholder=\\\"New Password\\\" [type]=\\\"showNewPassword? 'text':'password'\\\" clear-input=\\\"true\\\"> </ion-input>\\n              <ion-icon  [name]=\\\"passwordToggleIconNew\\\" color=\\\"medium\\\" class=\\\"iconEyeSize margin-top-icon\\\" slot=\\\"end\\\" (click)=\\\"toggleNewPassword()\\\"></ion-icon>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm m-t-b-14\\\">\\n            <ion-item lines=\\\"none\\\" >\\n              <ion-input class=\\\"margin-top-input\\\" formControlName=\\\"confirmPassword\\\"  placeholder=\\\"New Password\\\" [type]=\\\"showConfirmNewPassword? 'text':'password'\\\" clear-input=\\\"true\\\"> </ion-input>\\n              <ion-icon [name]=\\\"passwordToggleIconCon\\\" color=\\\"medium\\\" class=\\\"iconEyeSize margin-top-icon\\\" slot=\\\"end\\\" (click)=\\\"toggleConfirmNewPassword()\\\"> </ion-icon>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col  size=\\\"12\\\" style=\\\"padding: 0px;\\\">\\n            <div style=\\\"padding-top: 10px;\\\">\\n              <ion-button expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"doChangePassword()\\\" [disabled]=\\\"!changePasswordForm.valid ||loading\\\"> CHANGE PASSWORD </ion-button>            \\n            </div> \\n          </ion-col>\\n        </ion-row>  \\n    </ion-col>\\n</ion-row>\\n</ion-grid>\\n \\n</form>\\n<ion-grid>\\n<ion-row>\\n  <ion-col size=\\\"12\\\" *ngIf=\\\"isloadingSettings\\\">\\n    <ion-note color=\\\"primary\\\">{{loadingText}}</ion-note>\\n  <ion-progress-bar color=\\\"primary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n  </ion-col>\\n</ion-row>\\n</ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedComponentsModule } from '../sharedComponents/shared-components.module';\nimport { ChangePasswordPage } from './change-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ChangePasswordPage\n      }\n    ]),\n    SharedComponentsModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n","export default \"ion-content {\\n  --background: #FFF;\\n}\\n\\nion-toolbar {\\n  --background:#CA7529;\\n  --color: #fff !important;\\n}\\n\\nion-toolbar ion-title {\\n  font-family: \\\"RedHatDisplay\\\" !important;\\n  padding-left: 2px;\\n}\\n\\n.margin-top-input {\\n  margin-top: -6px;\\n}\\n\\n.margin-top-icon {\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhbmdlLXBhc3N3b3JkL0M6XFxQcm9qZWN0XFxBbmd1bGFyXFxlYXN5bWFsbF9ub25vZGUgKDEpXFxlYXN5bWFsbF9ub25vZGUvc3JjXFxhcHBcXGNoYW5nZS1wYXNzd29yZFxcY2hhbmdlLXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyxrQkFBQTtBQ0NEOztBREdBO0VBQ0Usb0JBQUE7RUFDQSx3QkFBQTtBQ0FGOztBRENFO0VBQ0UsdUNBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREdBO0VBQ0ksZ0JBQUE7QUNBSjs7QURHQTtFQUNJLGVBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuIC0tYmFja2dyb3VuZDogI0ZGRjtcbn1cblxuXG5pb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDojQ0E3NTI5O1xuICAtLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gIGlvbi10aXRsZXtcbiAgICBmb250LWZhbWlseTogXCJSZWRIYXREaXNwbGF5XCIhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctbGVmdDoycHg7XG4gICAgfVxufVxuXG4ubWFyZ2luLXRvcC1pbnB1dHtcbiAgICBtYXJnaW4tdG9wOi02cHg7XG59XG5cbi5tYXJnaW4tdG9wLWljb257XG4gICAgbWFyZ2luLXRvcDo1cHg7XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6ICNGRkY7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiNDQTc1Mjk7XG4gIC0tY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbn1cbmlvbi10b29sYmFyIGlvbi10aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJlZEhhdERpc3BsYXlcIiAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6IDJweDtcbn1cblxuLm1hcmdpbi10b3AtaW5wdXQge1xuICBtYXJnaW4tdG9wOiAtNnB4O1xufVxuXG4ubWFyZ2luLXRvcC1pY29uIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController  } from '@ionic/angular';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { FormBuilder, FormGroup, Validators,FormControl} from '@angular/forms';\nimport { UserService } from \"src/app/core/http-services/user.service\";\nimport { AuthenticationService } from \"src/app/core/authentication/authentication.service\";\nimport { ChangePasswordModel } from 'src/app/shared/models/user.model';\nimport { LoaderService } from '../core/loader.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  showCurrentPassword:boolean=false;\n  showNewPassword: boolean = false;\n  showConfirmNewPassword: boolean = false;\n  passwordToggleIconCur='eye';\n  passwordToggleIconNew='eye';\n  passwordToggleIconCon='eye';\n  isloadingSettings=false;\n  loadingText:string=\"\";\n  currentUser: any;\n  changePasswordForm: FormGroup;\n  changePassword: ChangePasswordModel = new ChangePasswordModel();\n  loading: boolean;\n\n   ///Inputs\n   title: string = 'Change Password';\n   longSearch: boolean = false;\n   showBackButton: boolean = true;\n  //  loading: boolean = false;\n   showSearch: boolean = true;\n  constructor(\n    private authService: AuthenticationService,\n    private userService: UserService,\n    public router: Router, \n    private nativeStorage: NativeStorage,\n    public loadingCtrl: LoadingController,\n    private toastController: ToastController,\n    public formBuilder: FormBuilder,\n    private location: Location,\n    public LoaderService: LoaderService,\n    ) {\n      this.changePasswordForm = this.formBuilder.group({ \n        oldPassword: new FormControl(this.changePassword.oldPassword, Validators.compose([Validators.required])),\n        newPassword: new FormControl(this.changePassword.newPassword, Validators.compose([Validators.required])),\n        confirmPassword: new FormControl(this.changePassword.confirmPassword, Validators.compose([Validators.required]))\n      });\n     }\n  ionViewWillEnter() {\n    // console.log(this.router['routerState'].snapshot.url);\n  }\n  myBackButton() {\n    // console.log(\"this.location: \" + this.location)\n    this.location.back();\n  }\n  ngOnInit() {\n    this.nativeStorage.getItem('currentUser').then((x) => {\n      this.currentUser = x;\n      \n      }\n      );\n   \n  }\n  \n  toggleCurrentPassword():void{\n    this.showCurrentPassword = !this.showCurrentPassword;\n    if(this.passwordToggleIconCur=='eye'){\n    this.passwordToggleIconCur='eye-off'\n    }\n    else{\n    this.passwordToggleIconCur='eye'\n    }\n    }\n  toggleNewPassword(): void {\n    this.showNewPassword = !this.showNewPassword;\n    if (this.passwordToggleIconNew == 'eye') {\n      this.passwordToggleIconNew = 'eye-off'\n    }\n    else {\n      this.passwordToggleIconNew = 'eye'\n    }\n  }\n  toggleConfirmNewPassword(): void {\n    this.showConfirmNewPassword = !this.showConfirmNewPassword;\n    if (this.passwordToggleIconCon == 'eye') {\n      this.passwordToggleIconCon = 'eye-off'\n    }\n    else {\n      this.passwordToggleIconCon = 'eye'\n    }\n  }\n  doChangePassword(){\n    console.log('Signup User:' + JSON.stringify(this.changePasswordForm.value));\n    this.LoaderService.showLoader('Changing Passowrd! Please wait...',  5000,  'custom-loader-class' )\n    this.loading = true;  \n    this.userService.changePassword(this.changePasswordForm.value).subscribe(\n        (data) => {\n          this.changePasswordForm.reset();\n          if (!data.error) {\n            console.log('changePassword Success:' + JSON.stringify(data));\n            this.authService.logout().then(isDone => {\n              this.LoaderService.hideLoader();\n              this.loading = false;\n              this.router.navigate(['/sign-in'])\n              this.LoaderService.presentToast('Congratulations', 'Password change was successful!', 2000, 'success');\n            })    \n            \n          } else {\n            this.LoaderService.hideLoader(); \n            this.loading = false;  \n            console.log('changePassword Else:' + JSON.stringify(data));\n            this.LoaderService.presentToast('Apologies', 'Password change was unsuccessful, Please try again', 2000, 'warning')\n          }\n        },\n        (err) => {\n          this.loadingCtrl.dismiss(); this.loading = false; \n          console.log('changePassword Error:' + JSON.stringify(err));\n          this.LoaderService.presentToast('Sign up Error', 'An error occurred. Please try again!', 4000, 'error')\n        }\n      );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport {\n  User,\n  RegisterModel,\n  ChangePasswordModel,\n  AccountSetupResponseModel,\n  AccountSettingResponseModel,\n  SendEmailVerificationCodeModel,\n  EmailVerificationModel,\n  SendResetPasswordLinkModel,\n  ResetPasswordModel,\n  ProfileModel,\n  AddressModel,\n  StateLgaModel,\n} from \"src/app/shared/models/user.model\";\nimport { map } from \"rxjs/operators\";\nimport {\n  storageNamesEnum,\n  getStorageName,\n} from \"src/app/shared/models/storage.model\";\nimport { AuthenticationService } from \"../authentication/authentication.service\";\nimport { BecomeSellerModel } from \"src/app/shared/models/seller.model\";\nimport { Endpoint } from \"../common/endpoints\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  apiUrl: string = `${environment.apiUrl}auth/`;\n\n  headerSetter(token) {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    });\n  }\n  headerSt() {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n    });\n  }\n\n  constructor(\n    private http: HttpClient,\n    private nativeStorage: NativeStorage,\n    private authService: AuthenticationService\n  ) {}\n\n  getSlides() {\n    return this.http.get(`${this.apiUrl}resources/slide`);\n  }\n\n  register(body: RegisterModel) {\n    return this.http.post<AccountSetupResponseModel>(Endpoint.AUTH.register, body );\n  }\n\n  changePassword(body: ChangePasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(Endpoint.USER.changePassword, body);\n  }\n\n  ResendEmailVerificationCode(email: string) {\n    return this.http.get<AccountSettingResponseModel>(`${Endpoint.AUTH.resendVerify}?email=${email}`);\n  }\n  \n  verifyEmailCode(token: string) {\n    return this.http.get<AccountSetupResponseModel>(`${Endpoint.AUTH.verify}?token=${token}`);\n  }\n\n  requestForPasswordResetLink(body: SendResetPasswordLinkModel) {\n    return this.http.post<AccountSettingResponseModel>(Endpoint.AUTH.initiatePasswordReset, body);\n  }\n\n   \n  resetPassword(token: ResetPasswordModel) {\n    return this.http.get<AccountSettingResponseModel>(`${Endpoint.AUTH.verifyPasswordReset}?token=${token}`);\n  }\n\n  updateProfile(body: ProfileModel) {\n    return this.http\n      .put<AccountSettingResponseModel>(Endpoint.USER.editProfile, body)\n      .pipe(\n        map((res) => {\n          if (!res.error) {\n            const user = this.authService.currentUserValue();\n            user.user = res.data;\n            localStorage.setItem(\n              getStorageName(storageNamesEnum.currentUser),\n              JSON.stringify(user)\n            );\n            this.authService.currentUserSubject.next(user);\n          }\n          return res;\n        })\n      );\n  }\n\n  getProfile(token:any) {\n    return this.http.get<AccountSettingResponseModel>(Endpoint.USER.profile);\n  }\n\n  getUser = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getUsername = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt.user.fName + \" \" + dt.user.sName;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getAddresses(token: any) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getAddress(id: string) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`\n    );\n  }\n\n  deleteAddress(token:string, id: string) {\n    return this.http.delete<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  updateAddress(token:string,id: string, body: AddressModel) {\n    return this.http.put<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  addAddress(token:string, body: AddressModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  becomeSeller(token:string,body: BecomeSellerModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${environment.apiUrl}/merchants/become-merchant`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getStatesLgas() {\n    return this.http.get<StateLgaModel[]>(`../../../assets/states.json`);\n  }\n}\n"],"sourceRoot":"webpack:///"}