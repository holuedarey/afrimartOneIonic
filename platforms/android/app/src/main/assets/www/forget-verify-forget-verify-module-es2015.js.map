{"version":3,"sources":["./src/app/forget-verify/forget-verify.page.html","./src/app/core/http-services/user.service.ts","./src/app/forget-verify/forget-verify-routing.module.ts","./src/app/forget-verify/forget-verify.module.ts","./src/app/forget-verify/forget-verify.page.scss","./src/app/forget-verify/forget-verify.page.ts"],"names":[],"mappings":"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","file":"forget-verify-forget-verify-module-es2015.js","sourcesContent":["export default \"<ion-content >\\n  <!-- <div class=\\\"topFadedLogo\\\"> </div> -->\\n  <form [formGroup]=\\\"activateForm\\\" >\\n    <ion-grid style=\\\"padding-top:75px;\\\" class=\\\"card\\\">\\n      <ion-row>\\n        <ion-col text-center>\\n          <div class=\\\"ion-text-center header-title\\\">ACTIVATE</div>\\n          <p class=\\\"t_center\\\">Kindly enter activation code sent to your email</p>\\n        </ion-col>\\n\\n        <ion-col size=\\\"12\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\" class=\\\"colForm\\\">\\n                <ion-label color=\\\"dark\\\" position=\\\"floating\\\">Activation Code</ion-label>\\n                <ion-input class=\\\"qouteForm\\\" formControlName=\\\"token\\\" type=\\\"text\\\" placeholder=\\\"Enter your Activation Code\\\" clear-input=\\\"true\\\">\\n                </ion-input> \\n            </ion-col>\\n            <div *ngIf=\\\"!activateForm.controls.token.valid && activateForm.controls.token.dirty\\\">\\n              <p style=\\\"color:#330501!important;text-align:center;\\\">Please enter a VALID Activation Code</p>\\n            </div>\\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-col size=\\\"12\\\" style=\\\"padding: 0px;\\\">\\n              <div style=\\\"padding-top: 10px;\\\">\\n                <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"activateUser()\\\" [disabled]=\\\"!activateForm.valid\\\"> Activate\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col col-12 class=\\\"t_center\\\" style=\\\"margin-top:50px;\\\">\\n          <p class=\\\"font-14\\\">Already have an Account?</p>\\n        </ion-col>\\n      </ion-row>\\n      <br>\\n      <ion-row>\\n        <ion-col col-12 class=\\\"t_center\\\" >\\n          <a style=\\\"font-size: 18px; font-family: 'RedHatDisplayBold'; color: #CB982F !important;\\\" [routerLink]=\\\"['/sign-in']\\\">Sign In Here</a>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </form>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" *ngIf=\\\"isloadingSettings\\\">\\n        <ion-note color=\\\"primary\\\">{{loadingText}}</ion-note>\\n        <ion-progress-bar color=\\\"primary\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport {\n  User,\n  RegisterModel,\n  ChangePasswordModel,\n  AccountSetupResponseModel,\n  AccountSettingResponseModel,\n  SendEmailVerificationCodeModel,\n  EmailVerificationModel,\n  SendResetPasswordLinkModel,\n  ResetPasswordModel,\n  ProfileModel,\n  AddressModel,\n  StateLgaModel,\n} from \"src/app/shared/models/user.model\";\nimport { map } from \"rxjs/operators\";\nimport {\n  storageNamesEnum,\n  getStorageName,\n} from \"src/app/shared/models/storage.model\";\nimport { AuthenticationService } from \"../authentication/authentication.service\";\nimport { BecomeSellerModel } from \"src/app/shared/models/seller.model\";\nimport { Endpoint } from \"../common/endpoints\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  apiUrl: string = `${environment.apiUrl}auth/`;\n\n  headerSetter(token) {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    });\n  }\n  headerSt() {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n    });\n  }\n\n  constructor(\n    private http: HttpClient,\n    private nativeStorage: NativeStorage,\n    private authService: AuthenticationService\n  ) {}\n\n  getSlides() {\n    return this.http.get(`${this.apiUrl}resources/slide`);\n  }\n\n  register(body: RegisterModel) {\n    return this.http.post<AccountSetupResponseModel>(Endpoint.AUTH.register, body );\n  }\n\n  changePassword(body: ChangePasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(Endpoint.USER.changePassword, body);\n  }\n\n  ResendEmailVerificationCode(email: string) {\n    return this.http.get<AccountSettingResponseModel>(`${Endpoint.AUTH.resendVerify}?email=${email}`);\n  }\n  \n  verifyEmailCode(token: string) {\n    return this.http.get<AccountSetupResponseModel>(`${Endpoint.AUTH.verify}?token=${token}`);\n  }\n\n  requestForPasswordResetLink(body: SendResetPasswordLinkModel) {\n    return this.http.post<AccountSettingResponseModel>(Endpoint.AUTH.initiatePasswordReset, body);\n  }\n\n   \n  resetPassword(token: ResetPasswordModel) {\n    return this.http.get<AccountSettingResponseModel>(`${Endpoint.AUTH.verifyPasswordReset}?token=${token}`);\n  }\n\n  updateProfile(body: ProfileModel) {\n    return this.http\n      .put<AccountSettingResponseModel>(Endpoint.USER.editProfile, body)\n      .pipe(\n        map((res) => {\n          if (!res.error) {\n            const user = this.authService.currentUserValue();\n            user.user = res.data;\n            localStorage.setItem(\n              getStorageName(storageNamesEnum.currentUser),\n              JSON.stringify(user)\n            );\n            this.authService.currentUserSubject.next(user);\n          }\n          return res;\n        })\n      );\n  }\n\n  getProfile(token:any) {\n    return this.http.get<AccountSettingResponseModel>(Endpoint.USER.profile);\n  }\n\n  getUser = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getUsername = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt.user.fName + \" \" + dt.user.sName;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getAddresses(token: any) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getAddress(id: string) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`\n    );\n  }\n\n  deleteAddress(token:string, id: string) {\n    return this.http.delete<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  updateAddress(token:string,id: string, body: AddressModel) {\n    return this.http.put<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  addAddress(token:string, body: AddressModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  becomeSeller(token:string,body: BecomeSellerModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${environment.apiUrl}/merchants/become-merchant`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getStatesLgas() {\n    return this.http.get<StateLgaModel[]>(`../../../assets/states.json`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgetVerifyPage } from './forget-verify.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgetVerifyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgetVerifyPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgetVerifyPageRoutingModule } from './forget-verify-routing.module';\n\nimport { ForgetVerifyPage } from './forget-verify.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ForgetVerifyPageRoutingModule\n  ],\n  declarations: [ForgetVerifyPage]\n})\nexport class ForgetVerifyPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdldC12ZXJpZnkvZm9yZ2V0LXZlcmlmeS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { UserService } from '../core/http-services/user.service';\nimport { LoaderService } from '../core/loader.service';\nimport { StorageService } from '../core/storage.service';\nimport { ActivateAccModel } from '../shared/models/user.model';\n\n@Component({\n  selector: 'app-forget-verify',\n  templateUrl: './forget-verify.page.html',\n  styleUrls: ['./forget-verify.page.scss'],\n})\nexport class ForgetVerifyPage implements OnInit {\n\n  isloadingSettings = false;\n  loadingText: string = '';\n  activateForm:FormGroup;\n  ActivateAccModel: ActivateAccModel = new ActivateAccModel();\n  loading:boolean;\n\n  constructor(\n    public formBuilder:FormBuilder,\n    public storageService:StorageService,\n    public userService:UserService,\n    public LoaderService:LoaderService,\n    public router:Router,\n    ) { \n    this.activateForm = this.formBuilder.group({\n      token: new FormControl(\n        (this.ActivateAccModel.token = ''),\n        Validators.compose([Validators.required])\n      ),\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  activateUser(){\n    const token = this.activateForm.value.token\n    this.LoaderService.showLoader('Activating Account! Please wait...', 10000,'custom-loader-class');\n    this.userService.verifyEmailCode(token).subscribe((data) => {\n      if (data.status == true) {\n        console.log('Activate User Success:' + JSON.stringify(data)); \n        this.LoaderService.hideLoader();\n        this.loading = false;\n        this.router.navigate(['/sign-in'])\n        this.LoaderService.presentToast('Congratulations', `${data.message} Please Login`, 5000, 'success');\n      } else {\n        this.LoaderService.hideLoader();\n        this.loading = false;\n        // console.log('Signup User Else:' + JSON.stringify(data));\n        this.LoaderService.presentToast('Invalid Details', `${data.message}`||  `Please confirm your details`, 5000, 'warning')\n      }\n    }, error => {\n      console.log(error)\n    });\n  }\n\n  \n}\n"],"sourceRoot":"webpack:///"}