{"version":3,"sources":["./src/app/my-cards/my-cards.page.html","./src/app/core/http-services/user.service.ts","./src/app/my-cards/my-cards.module.ts","./src/app/my-cards/my-cards.page.scss","./src/app/my-cards/my-cards.page.ts"],"names":[],"mappings":"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","file":"my-cards-my-cards-module-es2015.js","sourcesContent":["export default \"<app-header\\n  [title]=\\\"title\\\"\\n  [longSearch]=\\\"longSearch\\\"\\n  [showBackButton]=\\\"showBackButton\\\"\\n  [isLoading]=\\\"loading\\\"\\n  [showSearch]=\\\"showSearch\\\"\\n>\\n</app-header>\\n\\n<ion-content>\\n  <ion-row>\\n    <ion-col size=\\\"8\\\" class=\\\"t_left note_title_bold14Sec\\\">\\n      {{cards_count}} CARD(S)\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class=\\\"t_right\\\">\\n      <a (click)=\\\"presentCardModal()\\\" class=\\\"note_title_bold12Sec\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n        ADD NEW CARD</a\\n      >\\n    </ion-col>\\n  </ion-row>\\n\\n  <div *ngIf=\\\"lt_cards\\\">\\n    <ion-list *ngFor=\\\"let x of lt_cards;let i=index\\\" lines=\\\"none\\\">\\n      <ion-item-sliding id=\\\"item100\\\">\\n        <ion-item [ngClass]=\\\"(i % 2 == 0) ? 'odd' : 'even'\\\">\\n          <ion-icon\\n            ion-text\\n            color=\\\"dark\\\"\\n            name=\\\"card-outline\\\"\\n            item-start\\n          ></ion-icon>\\n          <ion-label>\\n            <h3><b>{{x.bank}}</b></h3>\\n            <h5>{{x.bin}} ********** {{x.last4}} ({{x.brand}})</h5>\\n            <h5><b>Exp:</b> {{x.expMonth}}/{{x.expYear}}</h5>\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" *ngIf=\\\"x.isDefault\\\">\\n            <ion-icon color=\\\"primary\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n            <div style=\\\"font-size: 12px; color: #bc4dad;\\\">Default</div>\\n          </ion-note>\\n        </ion-item>\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option\\n            color=\\\"success\\\"\\n            (click)=\\\"makeDefault(x)\\\"\\n            *ngIf=\\\"!x.isDefault\\\"\\n          >\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon> Make Default\\n          </ion-item-option>\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteConfirm(x)\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon> Delete\\n          </ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-list>\\n    <br>\\n    <ion-note class=\\\"note_title_bold14Black\\\">&nbsp;&nbsp;Please swipe a card to the right for the menu!!</ion-note>\\n  </div>\\n  \\n</ion-content>\\n\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport {\n  User,\n  RegisterModel,\n  ChangePasswordModel,\n  AccountSetupResponseModel,\n  AccountSettingResponseModel,\n  SendEmailVerificationCodeModel,\n  EmailVerificationModel,\n  SendResetPasswordLinkModel,\n  ResetPasswordModel,\n  ProfileModel,\n  AddressModel,\n  StateLgaModel,\n} from \"src/app/shared/models/user.model\";\nimport { map } from \"rxjs/operators\";\nimport {\n  storageNamesEnum,\n  getStorageName,\n} from \"src/app/shared/models/storage.model\";\nimport { AuthenticationService } from \"../authentication/authentication.service\";\nimport { BecomeSellerModel } from \"src/app/shared/models/seller.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  apiUrl: string = `${environment.apiUrl}accounts/`;\n\n  headerSetter(token) {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    });\n  }\n  headerSt() {\n    return new HttpHeaders({\n      channel: \"mobile\",\n      \"Content-Type\": \"application/json\",\n    });\n  }\n\n  constructor(\n    private http: HttpClient,\n    private nativeStorage: NativeStorage,\n    private authService: AuthenticationService\n  ) {}\n\n  getSlides() {\n    return this.http.get(`${this.apiUrl}resources/slide`);\n  }\n\n  register(body: RegisterModel) {\n    return this.http.post<AccountSetupResponseModel>(\n      `${this.apiUrl}register`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  changePassword(token,body: ChangePasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}change-password`,\n      body, {\n      headers: this.headerSetter(token),\n    }\n    );\n  }\n\n  sendEmailVerificationCode(body: SendEmailVerificationCodeModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}send-email-verification-token`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  verifyEmailCode(body: EmailVerificationModel) {\n    return this.http.post<AccountSetupResponseModel>(\n      `${this.apiUrl}email-verification`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  requestForPasswordResetLink(body: SendResetPasswordLinkModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}send-reset-password`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  resetPassword(body: ResetPasswordModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}reset-password`,\n      body,\n      {\n        headers: this.headerSt(),\n      }\n    );\n  }\n\n  updateProfile(token,body: ProfileModel) {\n    return this.http\n      .put<AccountSettingResponseModel>(`${this.apiUrl}profile`, body, {\n        headers: this.headerSetter(token),\n      })\n      .pipe(\n        map((res) => {\n          if (!res.error) {\n            const user = this.authService.currentUserValue();\n            user.user = res.data;\n            localStorage.setItem(\n              getStorageName(storageNamesEnum.currentUser),\n              JSON.stringify(user)\n            );\n            this.authService.currentUserSubject.next(user);\n          }\n          return res;\n        })\n      );\n  }\n\n  getProfile(token:any) {\n    return this.http.get<AccountSettingResponseModel>(`${this.apiUrl}profile`,\n      {\n        headers: this.headerSetter(token),\n      });\n  }\n\n  getUser = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getUsername = () => {\n    return this.nativeStorage.getItem('currentUser').then(\n      (dt) => {\n        if (dt) {\n          return dt.user.fName + \" \" + dt.user.sName;\n        } else {\n          return null;\n        }\n      },\n      (err) => {\n        return null;\n      }\n    );\n  };\n\n  getAddresses(token: any) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getAddress(id: string) {\n    return this.http.get<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`\n    );\n  }\n\n  deleteAddress(token:string, id: string) {\n    return this.http.delete<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  updateAddress(token:string,id: string, body: AddressModel) {\n    return this.http.put<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses/${id}`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  addAddress(token:string, body: AddressModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${this.apiUrl}addresses`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  becomeSeller(token:string,body: BecomeSellerModel) {\n    return this.http.post<AccountSettingResponseModel>(\n      `${environment.apiUrl}/merchants/become-merchant`,\n      body,\n      {\n        headers: this.headerSetter(token),\n      }\n    );\n  }\n\n  getStatesLgas() {\n    return this.http.get<StateLgaModel[]>(`../../../assets/states.json`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedComponentsModule } from '../sharedComponents/shared-components.module';\n\nimport { MyCardsPage } from './my-cards.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: MyCardsPage\n      }\n    ]),\n    SharedComponentsModule\n  ],\n  declarations: [MyCardsPage]\n})\nexport class MyCardsPageModule {}\n","export default \"ion-content {\\n  --background:#ffffff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0lvbmljL2FmcmltYXJ0b25lL3NyYy9hcHAvbXktY2FyZHMvbXktY2FyZHMucGFnZS5zY3NzIiwic3JjL2FwcC9teS1jYXJkcy9teS1jYXJkcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbXktY2FyZHMvbXktY2FyZHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XG4gICAgLS1iYWNrZ3JvdW5kOiNmZmZmZmY7XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6I2ZmZmZmZjtcbn0iXX0= */\"","import { ModalController, ToastController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { CardModalPage } from 'src/app/card-modal/card-modal.page';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { UserService } from 'src/app/core/http-services/user.service';\n\n@Component({\n  selector: 'app-my-cards',\n  templateUrl: './my-cards.page.html',\n  styleUrls: ['./my-cards.page.scss'],\n})\nexport class MyCardsPage implements OnInit {\n  ///Inputs\n  title: string = 'My Cards';\n  longSearch: boolean = false;\n  showBackButton: boolean = true;\n  loading: boolean = false;\n  showSearch: boolean = true;\n  ////////////////////\n  accounts_cards: any;\n  // lt_account_cards = new Array();\n  cards_count: number = 0;\n  currentUser: any;\n  lt_cards: any;\n\n  constructor(\n    private nativeStorage: NativeStorage,\n    private modalCtrl: ModalController,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.loading=true;\n    this.nativeStorage.getItem('currentUser').then((x) => {\n      this.currentUser = x;\n      this.userService.getProfile(this.currentUser.token).subscribe(\n        (data) => {\n          if (!data.error) {\n            // console.log('this.profile:' + JSON.stringify(data.data));\n            if (data.data.cards) {\n              this.lt_cards = data.data.cards;\n              this.nativeStorage.setItem('MyCards',data.data.cards);      \n              this.nativeStorage.getItem(\"MyCards\").then(data=>{\n                if(data){console.log('Native MyCards:' + JSON.stringify(data)); }\n              },\n              err=>{console.error(err)});\n\n              this.cards_count = this.lt_cards.length;\n              this.loading=false;\n            }\n          } else {\n            this.loading=false;\n            this.presentToast(\n              'OOPS',\n              'There was an error getting your profile, Please try again',\n              4000,\n              'warning'\n            );\n          }\n        },\n        (err) => {\n          this.loading=false;\n          this.presentToast(err.message, err.errors, 4000, 'error');\n        }\n      );\n    });\n  }\n  async presentToast(\n    header: string,\n    msg: string,\n    duration: number,\n    color: string\n  ) {\n    const toast = await this.toastController.create({\n      header: header,\n      position: 'bottom',\n      message: msg,\n      duration: duration,\n      // cssClass: 'custom-toast-class',\n      color: color,\n    });\n    toast.present();\n  }\n  async presentCardModal() {\n    const modal = await this.modalCtrl.create({\n      component: CardModalPage,\n      componentProps: {},\n    });\n    return await modal.present().then(() => {\n      modal.onWillDismiss().then((d) => {\n        if (d.data.card) {\n          console.log('New Card Data: ' + JSON.stringify(d.data.card));\n          this.lt_cards = d.data.card;\n          this.nativeStorage.setItem('MyCards',d.data.cards);\n          this.cards_count = this.lt_cards.length;\n        }\n      });\n    });\n  }\n  makeDefault(card){\n    console.log('makeDefault:' + JSON.stringify(card));\n  }\n  deleteConfirm(card){\n    console.log('deleteConfirm:' + JSON.stringify(card));\n  }\n}\n"],"sourceRoot":"webpack:///"}