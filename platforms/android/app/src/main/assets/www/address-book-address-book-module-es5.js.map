{"version":3,"sources":["src/app/address-book/address-book.page.html","src/app/address-book/address-book.module.ts","src/app/address-book/address-book.page.scss","src/app/address-book/address-book.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar *ngIf=\\\"!edit && !add\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"myBackButton()\\\">\\n        <ion-icon\\n          size=\\\"small\\\"\\n          name=\\\"arrow-back-outline\\\"\\n          color=\\\"light\\\"\\n        ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button>\\n        <ion-icon size=\\\"small\\\" name=\\\"search-outline\\\" color=\\\"light\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button id=\\\"notification-button\\\" (click)=\\\"goToCart()\\\">\\n        <ion-icon size=\\\"large\\\" name=\\\"cart-outline\\\" color=\\\"light\\\"></ion-icon>\\n        <ion-badge\\n          id=\\\"notifications-badge\\\"\\n          color=\\\"light\\\"\\n          class=\\\"note_title8Black\\\"\\n          *ngIf=\\\"currentUser\\\"\\n          >{{ cartTotal }}\\n        </ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>My Addresses</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"edit || add\\\">\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"closeDialog()\\\">\\n        <ion-icon\\n          size=\\\"small\\\"\\n          name=\\\"close-circle-outline\\\"\\n          color=\\\"light\\\"\\n        ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{title}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-progress-bar\\n  color=\\\"primary\\\"\\n  type=\\\"indeterminate\\\"\\n  *ngIf=\\\"isLoading\\\"\\n></ion-progress-bar>\\n\\n<ion-content>\\n  <section class=\\\"sectionProductItem\\\" *ngIf=\\\"!edit && !add\\\">\\n    <ion-grid>\\n      <ion-row\\n        *ngFor=\\\"let address of addresses; let i=index\\\"\\n        class=\\\"gridProductItemList\\\"\\n      >\\n        <ion-col size=\\\"9\\\">\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <app-text-shell\\n                animation=\\\"gradient\\\"\\n                [data]=\\\"address?.name\\\"\\n                class=\\\"note_title_bold14Sec\\\"\\n              ></app-text-shell>\\n              <!-- <app-text-shell animation=\\\"gradient\\\" [data]=\\\"address?.no+' ' + address?.street+', ' \\\"></app-text-shell> -->\\n              <app-text-shell\\n                animation=\\\"gradient\\\"\\n                [data]=\\\"address?.no+' '+ address?.street+', '+ address?.landmark\\\"\\n              >\\n              </app-text-shell>\\n              <app-text-shell\\n                animation=\\\"gradient\\\"\\n                [data]=\\\"address.city+', ' +address.state+', ' +address.country\\\"\\n              ></app-text-shell>\\n              <br />\\n              <app-text-shell\\n                animation=\\\"gradient\\\"\\n                [data]=\\\"address?.phone\\\"\\n              ></app-text-shell>\\n              <br />\\n              <div *ngIf=\\\"address.isDefault\\\" class=\\\"note_title10Black\\\">\\n                * This is your default address\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-col>\\n        <ion-col size=\\\"3\\\" class=\\\"t_right note_title12Sec\\\">\\n          <ion-icon\\n            name=\\\"create-outline\\\"\\n            color=\\\"success\\\"\\n            (click)=\\\"editAddress(address)\\\"\\n          ></ion-icon>\\n          <ion-icon\\n            name=\\\"trash-outline\\\"\\n            color=\\\"danger\\\"\\n            (click)=\\\"deleteAddress(address)\\\"\\n          ></ion-icon>\\n          <!-- <ion-text *ngIf=\\\"address\\\">Edit</ion-text> -->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n  <section *ngIf=\\\"edit || add\\\">\\n    <form [formGroup]=\\\"addressForm\\\">\\n      <ion-grid style=\\\"padding-top: 10%;\\\" class=\\\"card\\\">\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\" position=\\\"floating\\\"\\n                >Full Name</ion-label\\n              >\\n              <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" clear-input=\\\"true\\\">\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\" position=\\\"floating\\\"\\n                >House Number</ion-label\\n              >\\n              <ion-input formControlName=\\\"no\\\" type=\\\"text\\\" clear-input=\\\"true\\\">\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\" position=\\\"floating\\\"\\n                >Street Name</ion-label\\n              >\\n              <ion-input formControlName=\\\"street\\\" clear-input=\\\"true\\\">\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\" position=\\\"floating\\\"\\n                >Landmark</ion-label\\n              >\\n              <ion-input\\n                formControlName=\\\"landmark\\\"\\n                type=\\\"text\\\"\\n                clear-input=\\\"true\\\"\\n              >\\n              </ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col size=\\\"3\\\" class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-select  value=\\\"+234\\\" (ionChange)=\\\"changeMobileCountry($event)\\\" formControlName=\\\"ext\\\">\\n                  <ion-select-option  value=\\\"+234\\\">+234</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </ion-col>\\n\\n          <ion-col size=\\\"9\\\" class=\\\"colForm\\\">\\n          <ion-item lines=\\\"none\\\">\\n           <ion-input formControlName=\\\"phone\\\" type=\\\"tel\\\" clear-input=\\\"true\\\" placeholder=\\\"Mobile phone number\\\"  maxlength=\\\"10\\\"></ion-input>\\n          </ion-item>\\n           </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\">State</ion-label>\\n              <ion-select\\n                [value]=\\\"state\\\"\\n                (ionChange)=\\\"changeState($event)\\\"\\n                okText=\\\"Okay\\\"\\n                cancelText=\\\"Dismiss\\\"\\n                formControlName=\\\"state\\\"\\n              >\\n                <ng-container *ngIf=\\\"states\\\">\\n                  <ion-select-option value=\\\"\\\"\\n                    >Choose ...</ion-select-option\\n                  >\\n                  <ion-select-option\\n                    value=\\\"{{st.state.name}}\\\"\\n                    *ngFor=\\\"let st of states\\\"\\n                    >{{st.state.name}}\\n                  </ion-select-option>\\n                </ng-container>\\n              </ion-select>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"dark\\\">City</ion-label>\\n              <ion-select\\n                [value]=\\\"city\\\"\\n                (ionChange)=\\\"changeCity($event)\\\"\\n                okText=\\\"Okay\\\"\\n                cancelText=\\\"Dismiss\\\"\\n                formControlName=\\\"city\\\"\\n              >\\n                <ng-container *ngIf=\\\"lgas\\\">\\n                  <ion-select-option value=\\\"\\\"\\n                  >Choose ...</ion-select-option\\n                >\\n                  <ion-select-option\\n                    value=\\\"{{lga.name}}\\\"\\n                    *ngFor=\\\"let lga of lgas\\\"\\n                    >{{lga.name}}\\n                  </ion-select-option>\\n                </ng-container>\\n              </ion-select>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <!-- <ion-row>\\n              <ion-col col-12  class=\\\"colForm\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Country</ion-label>\\n                  <ion-input formControlName=\\\"country\\\" type=\\\"text\\\" clear-input=\\\"true\\\" readonly=\\\"true\\\">\\n                  </ion-input>\\n                </ion-item>\\n              </ion-col>\\n            </ion-row> -->\\n\\n        <ion-row>\\n          <ion-col col-12 class=\\\"colForm\\\">\\n            <ion-item lines=\\\"none\\\">\\n              <ion-checkbox formControlName=\\\"isDefault\\\"></ion-checkbox>\\n              &nbsp;Set as \\\"Default Shipping Address\\\"\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </form>\\n  </section>\\n  <section *ngIf=\\\"!addresses\\\">\\n    <ion-grid class=\\\"grid\\\" class=\\\"t_center\\\" style=\\\"padding-top: 50px;\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-icon\\n            name=\\\"reader-outline\\\"\\n            size=\\\"large\\\"\\n            slot=\\\"start\\\"\\n            color=\\\"primary\\\"\\n          ></ion-icon>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-text> YOU CURRENTLY HAVE NO ADDRESS!</ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\\n<ion-footer class=\\\"ion-no-border\\\" class=\\\"footer\\\">\\n  <ion-toolbar>\\n    <ion-button\\n      expand=\\\"full\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"newAddress()\\\"\\n      *ngIf=\\\"!edit && !add\\\"\\n    >\\n      <ion-icon size=\\\"small\\\" name=\\\"add-outline\\\"></ion-icon> ADD NEW ADDRESS\\n    </ion-button>\\n    <ion-button\\n      expand=\\\"full\\\"\\n      color=\\\"primary\\\"\\n      [disabled]=\\\"!addressForm.valid\\\"\\n      (click)=\\\"onSubmit()\\\"\\n      *ngIf=\\\"edit || add\\\"\\n    >\\n      {{addressId ? 'UPDATE' : 'ADD'}} ADDRESS\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ShellModule } from '../shell/shell.module';\nimport { AddressBookPage } from './address-book.page';\nimport { SharedComponentsModule } from '../sharedComponents/shared-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: AddressBookPage\n      }\n    ]),\n    ShellModule,\n    SharedComponentsModule\n  ],\n  declarations: [AddressBookPage]\n})\nexport class AddressBookPageModule {}\n","export default \"ion-icon {\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0lvbmljL2FmcmltYXJ0b25lL3NyYy9hcHAvYWRkcmVzcy1ib29rL2FkZHJlc3MtYm9vay5wYWdlLnNjc3MiLCJzcmMvYXBwL2FkZHJlc3MtYm9vay9hZGRyZXNzLWJvb2sucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYWRkcmVzcy1ib29rL2FkZHJlc3MtYm9vay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn0iLCJpb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn0iXX0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AddressModel, StateLgaModel } from 'src/app/shared/models/user.model';\nimport { UserService } from 'src/app/core/http-services/user.service';\nimport { AuthenticationService } from 'src/app/core/authentication/authentication.service';\nimport { ProductService } from 'src/app/core/http-services/product.service';\nimport { UserDataModel } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-address-book',\n  templateUrl: './address-book.page.html',\n  styleUrls: ['./address-book.page.scss'],\n})\nexport class AddressBookPage implements OnInit {\n  addressForm: FormGroup;\n  address: AddressModel = new AddressModel();\n  addressId: string;\n  states: StateLgaModel[];\n  lgas: any[];\n  selState: string = '';\n  currentUser: UserDataModel = this.authService.currentUserValue();\n  getAdd: any;\n  selectCity: string = '';\n  add: boolean = false;\n  edit: boolean = false;\n  addresses: AddressModel[]=[];\n  selectedId: string;\n  isDefaultAddress = true;\n  hasAddress: boolean = false;\n  title: string = 'My Addresses';\n  cartTotal: number = 0;\n  isLoading: boolean = false;\n\n  constructor(\n    private toastController: ToastController,\n    public loadingCtrl: LoadingController,\n    private nativeStorage: NativeStorage,\n    private authService: AuthenticationService,\n    private productService: ProductService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private _cdr: ChangeDetectorRef\n  ) {\n    // console.log('Current User: ' + JSON.stringify(this.currentUser));\n    this.productService.cartQty.subscribe(\n      (value) => (this.cartTotal = Number(value))\n    );\n    this.addressForm = new FormGroup({\n      no: new FormControl(this.address.no, [Validators.required]),\n      street: new FormControl(this.address.street, [Validators.required,Validators.minLength(10)]),\n      landmark: new FormControl(this.address.landmark),\n      city: new FormControl(this.address.city, [Validators.required,Validators.minLength(3)]),\n      state: new FormControl(this.address.state, [Validators.required,Validators.minLength(3)]),\n      country: new FormControl('Nigeria', [Validators.required]),\n      ext: new FormControl('+234', [Validators.required]),\n      isDefault: new FormControl(this.address.isDefault),\n      name: new FormControl(this.address.name, [Validators.required]),\n      phone: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(10),\n        Validators.minLength(10),\n      ]),\n    });\n  }\n  myBackButton() {\n    // console.log(\"this.location: \" + this.location)\n    this.location.back();\n  }\n  ngOnInit() {\n    this.nativeStorage.getItem('currentUser').then((x) => {\n      this.currentUser = x;\n      this.getAddresses();\n      this.getStates();\n     \n      }\n      );\n   \n  }\n  async presentToast(\n    header: string,\n    msg: string,\n    duration: number,\n    color: string\n  ) {\n    const toast = await this.toastController.create({\n      header: header,\n      position: 'bottom',\n      message: msg,\n      duration: duration,\n      // cssClass: 'custom-toast-class',\n      color: color,\n    });\n    toast.present();\n  }\n  getStates() {\n    this.userService.getStatesLgas().subscribe((dt) => {\n      this.states = dt;\n      this.selState = this.states[0].state.name;\n      if (this.states.length > 0) {\n        this.getLgas(this.states[0].state.name);\n      }\n    });\n  }\n  getLgas(state: string) {\n    this.states.forEach((st) => {\n      if (st.state.name === state) {\n        this.lgas = st.state.locals;\n        this.selectCity = this.lgas[0].name;\n        this.addressForm.value.state = this.selState;\n        this.addressForm.value.city = this.selectCity;\n        // console.log('getStates() this.addressForm.value: ' + JSON.stringify(this.addressForm.value))\n        return;\n      }\n    });\n    // console.log('LGAs: ' + JSON.stringify(this.lgas))\n    // console.log('selectCity: ' + this.selectCity)\n  }\n  changeState(e: any) {\n    console.log('Change State: ' + JSON.stringify(e.target.value))\n    console.log('Change Address: ' +JSON.stringify(this.addressForm.value))\n    this.getLgas(e.target.value);\n  }\n  changeCity(e: any) {\n    console.log('Change City: ' + JSON.stringify(e.target.value))\n    console.log('Change Address: ' +JSON.stringify(this.addressForm.value))\n    this.getLgas(e.target.value);\n  }\n  onCountryChange($event) {\n    // console.log('onCountryChange: ' + $event.value)\n  }\n  changeMobileCountry($event) {\n    // console.log('changeMobileCountry: ' + $event.value)\n  }\n  getAddresses() {\n    this.isLoading=true;\n    this.userService.getAddresses(this.currentUser.token).subscribe(\n      (data) => {\n        if (!data.error) {\n          this.addresses = data.data;\n          // console.log('Addresses: ' + JSON.stringify(this.addresses));\n          const def = this.addresses.find((x) => x.isDefault);\n          this.selectedId = def ? def._id : null;\n          this.isLoading=false;\n        }\n      },\n      (err) => {\n        this.isLoading=false;\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: err.message,\n          text: err.errors.join(','),\n          showConfirmButton: true,\n        });\n      }\n    );\n  }\n  onSubmit() {\n    if (this.addressId) {\n      this.updateAddress();\n    } else {\n      this.addAddress();\n    }\n  }\n  setAddress(address: AddressModel) {\n    if (address) {\n      this.addressForm.setValue({\n        street: address.street,\n        city: address.city,\n        state: address.state,\n        country: address.country,\n        isDefault: address.isDefault,\n        phone: address.phone.replace(this.addressForm.value.ext,''),\n        ext:'+234',\n        no: address.no,\n        name: address.name,\n        landmark: address.landmark,\n      });\n      this.selState = address.state;\n      this.getLgas(this.selState);\n      // this.selectCity = address.city;\n      // console.log('setAddress: ' + JSON.stringify(address))\n      this._cdr.detectChanges();\n    }\n  }\n  editAddress(address) {\n    this.title = 'Edit Address';\n    console.log('editAddress: ' + JSON.stringify(address));\n    this.addressId = address._id;\n    this.edit = true;\n    this.add = false;\n    this.setAddress(address);\n  }\n  newAddress() {\n    this._cdr.detectChanges();\n    this.title = 'Add new address';\n    this.addressForm.patchValue({\n      name: this.currentUser.user.fName + ' ' + this.currentUser.user.sName,\n    });\n    // this.addressForm.patchValue({ 'phone': this.currentUser.user.phone})  ;\n    console.log('newAddress: '+ JSON.stringify(this.addressForm.value));\n    this.addressId = null;\n    this.edit = false;\n    this.add = true;\n   \n  }\n  deleteAddress(address: AddressModel) {\n    this.title = 'Delete Address';\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Are you sure you want to delete this?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.value) {\n        this.loadingCtrl\n          .create({\n            spinner: 'dots',\n            message: 'Deleting address! Please wait...',\n            duration: 15000,\n            cssClass: 'custom-loader-class',\n          })\n          .then((res) => {\n            res.present();\n            res.onDidDismiss().then((dis) => {});\n          });\n        this.userService\n          .deleteAddress(this.currentUser.token, address._id)\n          .subscribe(\n            (data) => {\n              this.loadingCtrl.dismiss();\n              if (!data.error) {\n                this.title = 'My Addresses';\n                this.addresses = data.data;\n              }\n              Swal.fire({\n                position: 'center',\n                icon: data.error ? 'error' : 'success',\n                title: data.error ? 'Oops' : 'Congratulations',\n                text: data.error\n                  ? 'Could not delete your address at this time. Please try again!'\n                  : 'The address was deleted successfully!',\n                showConfirmButton: true,\n              });\n            },\n            (err) => {\n              this.loadingCtrl.dismiss();\n              console.error(err);\n              Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: 'Delete Error',\n                text: err.errors.join(','),\n                showConfirmButton: true,\n              });\n            }\n          );\n      }\n    });\n  }\n  addAddress() {\n    // console.log('addAddress() this.addressForm.value: ' + JSON.stringify(this.addressForm.value));\n    this.addressForm.patchValue({phone:this.addressForm.value.ext+''+this.addressForm.value.phone});\n    // console.log('Edited addAddress() this.addressForm.value: ' + JSON.stringify(this.addressForm.value));\n\n    this.loadingCtrl\n      .create({\n        spinner: 'dots',\n        message: 'Adding address! Please wait...',\n        duration: 15000,\n        cssClass: 'custom-loader-class',\n      })\n      .then((res) => {\n        res.present();\n        res.onDidDismiss().then((dis) => {});\n      });\n    this.userService\n      .addAddress(this.currentUser.token, this.addressForm.value)\n      .subscribe(\n        (data) => {\n          console.log('addAddress() Returned data: ' + JSON.stringify(data.data));\n          if (!data.error) {\n            this.title = 'My Addresses';\n            this.addresses = data.data;\n            this.add = false;\n            this.loadingCtrl.dismiss();\n            this.addressForm.reset();\n          }\n          Swal.fire({\n            position: 'center',\n            icon: data.error ? 'error' : 'success',\n            title: data.error ? 'Oops' : 'Congratulations',\n            text: data.error\n              ? 'Could not save your address at this time. Please try again!'\n              : 'Your address was saved successfully!',\n            showConfirmButton: true,\n          }).then((res) => {});\n        },\n        (err) => {\n          this.loadingCtrl.dismiss();\n          this.addressForm.patchValue({phone:this.addressForm.value.phone.replace(this.addressForm.value.ext,'')})\n          console.error(err);\n          Swal.fire({\n            position: 'center',\n            icon: 'error',\n            title: 'Save Error',\n            text: 'Could not save your address at this time. Please try again!',\n            showConfirmButton: true,\n          });\n        }\n      );\n  }\n  updateAddress() {\n    // console.log('updateAddress() this.addressForm.value: ' + JSON.stringify(this.addressForm.value))\n    this.addressForm.patchValue({phone:this.addressForm.value.ext+''+this.addressForm.value.phone});\n    this.loadingCtrl\n      .create({\n        spinner: 'dots',\n        message: 'Updating address! Please wait...',\n        duration: 15000,\n        cssClass: 'custom-loader-class',\n      })\n      .then((res) => {\n        res.present();\n        res.onDidDismiss().then((dis) => {});\n      });\n    this.userService\n      .updateAddress(\n        this.currentUser.token,\n        this.addressId,\n        this.addressForm.value\n      )\n      .subscribe(\n        (data) => {\n          Swal.fire({\n            position: 'center',\n            icon: data.error ? 'error' : 'success',\n            title: data.error ? 'Oops' : 'Congratulations',\n            text: data.error\n              ? 'Could not update your address at this time. Please try again!'\n              : 'Your address was updated successfully!',\n            showConfirmButton: true,\n          }).then((res) => {\n            if (!data.error) {\n              this.title = 'My Addresses';\n              this.addressId = null;\n              this.addresses = data.data;\n              this.edit = false;\n              this.addressForm.reset();\n              this.loadingCtrl.dismiss();\n            }\n\n            // this.router.navigate([\"/app/profile\"]);\n          });\n        },\n        (err) => {\n          this.addressForm.patchValue({phone:this.addressForm.value.phone.replace(this.addressForm.value.ext,'')})\n          console.error(err);\n          this.loadingCtrl.dismiss();\n          Swal.fire({\n            position: 'center',\n            icon: 'error',\n            title: 'Update Error',\n            text: 'An error occurred during the update. Please try again!',\n            showConfirmButton: true,\n          });\n        }\n      );\n  }\n  closeDialog() {\n    // console.log('Close Dialog')\n    this.title = 'My Addresses';\n    this.edit = false;\n    this.add = false;\n  }\n  goToCart() {\n    this.router.navigate(['/cart']);\n  }  \n}\n"],"sourceRoot":"webpack:///","file":"address-book-address-book-module-es5.js"}